import{O as o,C as i}from"./bsConstants-DaZpizR-.js";/* empty css              */o.onReady(async()=>{const v=await o.player.getSelection();if(!v)return await o.popover.close(i.CONTEXTID);const I=document.getElementById("visionContext"),m=document.getElementById("bumperContext"),f=document.getElementById("falloffContext"),d=document.getElementById("darkContext"),g=document.getElementById("innerContext"),N=document.getElementById("outerContext"),r=document.getElementById("visionOwnerSelect"),u=await o.scene.items.getItems(e=>v?.includes(e.id)),E=await o.party.getPlayers(),c=document.createElement("option");c.value=await o.player.getId(),c.textContent=await o.player.getName(),c.style.color=await o.player.getColor(),r.appendChild(c);for(const e of E){const t=document.createElement("option");t.value=e.id,t.textContent=e.name,t.style.color=e.color,r.appendChild(t)}const p=await o.scene.getMetadata();if(r.value="",u.length===1){const e=u[0];r.value=e.createdUserId,I.value=e.metadata[`${i.EXTENSIONID}/visionRange`]!==void 0?e.metadata[`${i.EXTENSIONID}/visionRange`]:s("visionRangeDefault"),m.value=e.metadata[`${i.EXTENSIONID}/visionSourceRange`]!==void 0?e.metadata[`${i.EXTENSIONID}/visionSourceRange`]:s("visionSourceDefault"),f.value=e.metadata[`${i.EXTENSIONID}/visionFallOff`]!==void 0?e.metadata[`${i.EXTENSIONID}/visionFallOff`]:s("visionFallOffDefault"),g.value=e.metadata[`${i.EXTENSIONID}/visionInAngle`]!==void 0?e.metadata[`${i.EXTENSIONID}/visionInAngle`]:s("visionInAngleDefault"),N.value=e.metadata[`${i.EXTENSIONID}/visionOutAngle`]!==void 0?e.metadata[`${i.EXTENSIONID}/visionOutAngle`]:s("visionOutAngleDefault"),d.value=e.metadata[`${i.EXTENSIONID}/visionDark`]!==void 0?e.metadata[`${i.EXTENSIONID}/visionDark`]:s("visionDarkDefault")}r.onchange=async e=>{const t=e.currentTarget;await o.scene.items.updateItems(u.map(a=>a.id),a=>{for(const n of a)n.createdUserId=t.value})},I.onchange=async e=>{if(!e||!e.target)return;const t=e.target,a=parseInt(t.value);a<0&&(t.value="0"),a>999&&(t.value="999"),isNaN(a)&&(t.value=s("visionRangeDefault")),await o.scene.items.updateItems(u.map(n=>n.id),n=>{for(let l of n)l.metadata[`${i.EXTENSIONID}/visionRange`]=t.value})},m.onchange=async e=>{if(!e||!e.target)return;const t=e.target,a=parseFloat(t.value);a<0&&(t.value="0"),a>999&&(t.value="999"),isNaN(a)&&(t.value=s("visionSourceDefault")),await o.scene.items.updateItems(u.map(n=>n.id),n=>{for(let l of n)l.metadata[`${i.EXTENSIONID}/visionSourceRange`]=t.value})},f.onchange=async e=>{if(!e||!e.target)return;const t=e.target,a=parseFloat(t.value);a<0&&(t.value="0"),a>10&&(t.value="10"),isNaN(a)&&(t.value=s("visionFallOffDefault")),await o.scene.items.updateItems(u.map(n=>n.id),n=>{for(let l of n)l.metadata[`${i.EXTENSIONID}/visionFallOff`]=t.value})},g.onchange=async e=>{if(!e||!e.target)return;const t=e.target,a=parseInt(t.value);a<0&&(t.value="0"),a>360&&(t.value="360"),isNaN(a)&&(t.value=s("visionInAngleDefault")),await o.scene.items.updateItems(u.map(n=>n.id),n=>{for(let l of n)l.metadata[`${i.EXTENSIONID}/visionInAngle`]=t.value})},N.onchange=async e=>{if(!e||!e.target)return;const t=e.target,a=parseInt(t.value);a<0&&(t.value="0"),a>360&&(t.value="360"),isNaN(a)&&(t.value=s("visionOutAngleDefault")),await o.scene.items.updateItems(u.map(n=>n.id),n=>{for(let l of n)l.metadata[`${i.EXTENSIONID}/visionOutAngle`]=t.value})},d.onchange=async e=>{if(!e||!e.target)return;const t=e.target,a=parseInt(t.value);a<0&&(t.value="0"),a>999&&(t.value="999"),isNaN(a)&&(t.value=s("visionDarkDefault")),await o.scene.items.updateItems(u.map(n=>n.id),n=>{for(let l of n)l.metadata[`${i.EXTENSIONID}/visionDark`]=t.value})};function s(e){const t=p[`${i.EXTENSIONID}/${e}`];return t||i.ATTENUATIONDEFAULT}});
